# AIzaSyA9fi96U9aVcHJZx1PsVPTyCnZK5YgWpdU

require 'rest-client'

namespace :malware do
  desc ''
  task check: :environment do
    task_name = "Task malware__check"
    Rails.logger.info "[#{task_name}] begin"

    online_sites = Website.in_statuses([Website::STATUS_ONLINE]).order("RAND()")

    result = []

    online_sites.each do |website|
      wl = website.website_locations.first
      host = wl.main_domain
      Rails.logger.info "[#{task_name}] Current site check .. #{host}"

      API_KEY = ENV["GOOGLE_API_KEY"]
      sb_url = "https://safebrowsing.googleapis.com/v4/threatMatches:find?key=#{API_KEY}"

      query = {
        "client" => {
          "clientId" =>      "openodeio",
          "clientVersion" => "1.0.0"
        },
        "threatInfo" => {
          "threatTypes" =>      ["MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE"],
          "platformTypes" =>    ["WINDOWS"],
          "threatEntryTypes" => ["URL"],
          "threatEntries" => [
            {"url" => "http://#{host}/"}
          ]
        }
      }

      query_result = JSON.parse(
        RestClient::Request.execute(
          method: :post, url: sb_url, payload: query.to_json,
          headers: {accept: :json, "Content-Type": "application/json"})
      )

      if "#{query_result.inspect}".include?("matches")
        result << { host: host, result: query_result }
        puts "Found malware on #{host} -> #{query_result}"
      end

      sleep 1
      
    rescue StandardError => e
      Rails.logger.error("Issue malware checker... #{e}")
      sleep 1
    end
  end
end
