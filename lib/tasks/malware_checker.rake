
require 'rest-client'

namespace :malware do
  desc ''
  task check: :environment do
    task_name = "Task malware__check"
    Rails.logger.info "[#{task_name}] begin"

    online_sites = Website.in_statuses([Website::STATUS_ONLINE]).order("RAND()")

    result = []

    online_sites.each do |website|
      wl = website.website_locations.first
      host = wl.main_domain
      Rails.logger.info "[#{task_name}] Current site check .. #{host}"

      api_key = ENV["GOOGLE_API_KEY"]
      sb_url = "https://safebrowsing.googleapis.com/v4/threatMatches:find?key=#{api_key}"

      query = {
        "client" => {
          "clientId" => "openodeio",
          "clientVersion" => "1.0.0"
        },
        "threatInfo" => {
          "threatTypes" => %w[MALWARE SOCIAL_ENGINEERING UNWANTED_SOFTWARE],
          "platformTypes" => ["WINDOWS"],
          "threatEntryTypes" => ["URL"],
          "threatEntries" => [
            { "url" => "http://#{host}/" }
          ]
        }
      }

      query_result = JSON.parse(
        RestClient::Request.execute(
          method: :post, url: sb_url, payload: query.to_json,
          headers: { accept: :json, "Content-Type": "application/json" }
        )
      )

      if query_result.inspect.to_s.include?("matches")
        result << { host: host, result: query_result }
        Rails.logger.info "Found malware on #{host} -> #{query_result}"
      end

      sleep 1

    rescue StandardError => e
      Rails.logger.error("Issue malware checker... #{e}")
      sleep 1
    end

    if result.count.positive?
      Rails.logger.info "Sending email"

      SupportMailer.with(
        attributes: {
          "message" => result.inspect.to_s,
          "title" => "opeNode malware found"
        },
        email_to: ENV['DEFAULT_EMAIL']
      ).contact.deliver_now
    end
  end
end
